@model IEnumerable<SRKSDemo.Server_Model.tblholdcode>
@{
    ViewBag.Title = "UnitWorks - Index";
    var slno = 1;
    Layout = "~/Views/Shared/_LayoutForMaster.cshtml";
    //Layout = null;
}

<script src="~/js/jquery-2.1.4.min.js"></script>

<h2></h2>@* induces gap between button and container top*@
<div style="width: 2%; display: inline-block; height: inherit"></div>
@if (ViewBag.roleid == 1 || ViewBag.roleid == 2)
{ 
    @Html.ActionLink("Create New Hold Code", "Create", new { }, new { @class = "btn orange btn-lg ", @style = "color:black;width:30%;height:70%;backgroundcolor:red;font-size:90%" })
     <div style="width:5%;display:inline"></div>
    @Html.ActionLink("Import Data From Excel", "ImportHoldCodes", new { }, new { @class = "btn orange btn-lg ", @style = "color:black;width:20%;height:70%;backgroundcolor:red;font-size:90%;display:inline" }) 
 <div style="width:5%;display:inline"></div>
    @Html.ActionLink("Export HoldCodes To Excel", "ExportHoldCodesDetails", new { }, new { @class = "btn orange btn-lg ", @style = "color:black;width:20%;height:70%;backgroundcolor:red;font-size:90%;display:inline" }) 

}

<div class="wrp clearfix">
    <div class="fluid">
        <div class="widget grid12">
            <div class="widget-header">
                <div class="widget-title" style="font-size: 1.5vw">
                    Hold Code
                </div>
            </div>
            <!-- /widget-header -->

            <div class="widget-content pad20f">
                <div class="widget__content table-responsive table-hover">
                    <table class="table">
                        <thead>
                            <tr class="text-centre" style="background-color: orange">
                                <th style="text-align: center; font-size: 95%">Sl.No.</th>
                                <th style="font-size: 95%">Hold Code Level-1</th>
                                <th style="font-size: 95%">Hold Code Level-2</th>
                                <th style="font-size: 95%">Hold Code Level-3</th>

                                @*<th style="font-size: 95%">LossCode Description</th>*@
                                <th style="font-size: 95%">SAP EndCode </th>
                                @*<th style="text-align: center; font-size: 95%">Loss Code Level </th>*@

                                @if (ViewBag.roleid == 1 || ViewBag.roleid == 2)
                                {
                                    <th style="text-align: center; font-size: 95%">Edit</th>
                                    <th style="text-align: center; font-size: 95%">Delete</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="spacer"></tr>
                            <tr class="spacer"></tr>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td style="width: auto; text-align: center; font-family: Helvetica; font-size: 85%">
                                        @slno
                                    </td>

                                    @{
                                if (Convert.ToInt32(item.HoldCodesLevel) == 1)
                                {
                                        <td style="width: auto; font-family: Helvetica; font-size: 85%">
                                            @Html.DisplayFor(modelItem => item.HoldCode)
                                        </td>
                                        <td></td>
                                        <td></td>
                                         <td>@Html.DisplayFor(modelItem => item.EndCode)</td>
                                }
                                    }

                                    @{
                                if (Convert.ToInt32(item.HoldCodesLevel) == 2)
                                {

                                    if (Convert.ToString(item.HoldCodesLevel1ID) != null)
                                    {
                                        int losscodeid = Convert.ToInt32(item.HoldCodesLevel1ID);
                                        SRKSDemo.Server_Model.i_facility_unimechEntities db = new SRKSDemo.Server_Model.i_facility_unimechEntities();
                                        var lossdetailsDesc = db.tblholdcodes.Where(m => m.IsDeleted == 0 && m.HoldCodeID == losscodeid).Select(m => m.HoldCode).SingleOrDefault();
                                        <td style="width: auto; font-family: Helvetica; font-size: 85%">
                                            @lossdetailsDesc
                                        </td>
                                        <td style="width: auto; font-family: Helvetica; font-size: 85%">
                                            @Html.DisplayFor(modelItem => item.HoldCode)
                                        </td>
                                             
                                    }
                                        <td></td>
                                         <td>@Html.DisplayFor(modelItem => item.EndCode)</td>
                                }
                                    }
                                    @{
                                        if (Convert.ToInt32(item.HoldCodesLevel) == 3)
                                        {
                                            if (Convert.ToString(item.HoldCodesLevel1ID) != null)
                                            {
                                                int losscodeid = Convert.ToInt32(item.HoldCodesLevel1ID);
                                                SRKSDemo.Server_Model.i_facility_unimechEntities db = new SRKSDemo.Server_Model.i_facility_unimechEntities();
                                                var lossdetailsDesc = db.tblholdcodes.Where(m => m.IsDeleted == 0 && m.HoldCodeID == losscodeid).Select(m => m.HoldCode).SingleOrDefault();
                                        <td style="width: auto; font-family: Helvetica; font-size: 85%">
                                            @lossdetailsDesc
                                        </td>
                                            }
                                            if (Convert.ToString(item.HoldCodesLevel2ID) != null)
                                            {
                                                int losscodeid1 = Convert.ToInt32(item.HoldCodesLevel2ID);
                                                SRKSDemo.Server_Model.i_facility_unimechEntities db1 = new SRKSDemo.Server_Model.i_facility_unimechEntities();
                                                var lossdetailsDesc1 = db1.tblholdcodes.Where(m => m.IsDeleted == 0 && m.HoldCodeID == losscodeid1).Select(m => m.HoldCode).SingleOrDefault();
                                        <td style="width: auto; font-family: Helvetica; font-size: 85%">
                                            @lossdetailsDesc1
                                        </td>
                                    }
                                        <td style="width: auto; font-family: Helvetica; font-size: 85%">
                                            @Html.DisplayFor(modelItem => item.HoldCode)
                                        </td>
                                         <td>@Html.DisplayFor(modelItem => item.EndCode)</td>
                                }
                                    }

                                    @*
                                        @{
                                            if(Convert.ToString(item.HoldCodesLevel1ID) != null){
                                            int HoldCodeID = Convert.ToInt32( item.HoldCodesLevel1ID);
                                            i_facility.Models.i_facility_tsalEntities db = new i_facility.Models.i_facility_tsalEntities();
                                            var lossdetailsDesc = db.tblholdcodes.Where(m => m.IsDeleted == 0 && m.HoldCodeID == HoldCodeID).Select(m => m.LossCode).SingleOrDefault();
                                            @lossdetailsDesc
                                        }
                                         }
                                    </td>
                                    <td style="width: auto; font-family: Helvetica; font-size: 85%">
                                        @{
                                            if(Convert.ToString(item.HoldCodesLevel2ID) != null){
                                            int HoldCodeID = Convert.ToInt32( item.HoldCodesLevel2ID);
                                            i_facility.Models.i_facility_tsalEntities db = new i_facility.Models.i_facility_tsalEntities();
                                            var lossdetailsDesc = db.tblholdcodes.Where(m => m.IsDeleted == 0 && m.HoldCodeID == HoldCodeID).Select(m=>m.LossCode).SingleOrDefault();
                                            @lossdetailsDesc
                                        }
                                         }
                                    </td>
                                    <td style="width: auto; text-align: center; font-family: Helvetica; font-size: 85%">
                                        @Html.DisplayFor(modelItem => item.LossCode)
                                    </td>*@

                                    @*<td style="width: auto; font-family: Helvetica; font-size: 85%">
                                        @Html.DisplayFor(modelItem => item.LossCodeDesc)
                                    </td>*@

                                   @* <td style="width: auto; font-family: Helvetica; font-size: 85%">
                                        @Html.DisplayFor(modelItem => item.MessageType)
                                    </td>*@


                                    @if (ViewBag.roleid == 1 || ViewBag.roleid == 2)
                                    {
                                        <td style="width: auto; text-align: center; font-family: Helvetica" data-toggle="tooltip" title="Edit">
                                            @Html.ActionLink(" ", "Edit", new { id = item.HoldCodeID }, new { @class = " blue  btn-lg fa fa-edit", @style = "color:white;text-decoration:none" })
                                        </td>
                                        <td style="width: auto; text-align: center; font-family: Helvetica" data-toggle="tooltip" title="Delete">
                                            @{var id = item.HoldCodeID;
                                             @Html.ActionLink(" ", "Delete", new { id = item.HoldCodeID }, new { @id = id, @class = "DeleteModel red btn-lg fa fa-trash", @style = "color:white;text-decoration:none" })
                                        }</td>
                                    }
                                </tr>
                                    slno = slno + 1;
                            }
                            <tr class="spacer"></tr>
                        </tbody>
                    </table>
                </div>


            </div>
            <!-- /widget-content -->
        </div>
        <!-- /widget -->
    </div>
     <div id="dialog-confirm" title=" Delete Confirmation ?" style="height: 5%;">
        <p> 
        </p>
    </div>
</div>


<script>
    //This model window is from https://jqueryui.com/dialog/#modal-confirmation 
    $(".DeleteModel").on("click", (function (e) {
        var MyHref = $(this).prop('href');
        e.preventDefault();
        $("#dialog-confirm").dialog({
            resizable: true,
            height: 50,
            width: 330,
            modal: true,
            buttons: {
                "Delete HoldCode": function () {
                    window.location.href = MyHref;
                },
                Cancel: function () {
                    $(this).dialog("close");
                    //We were getting method a hidden field value as null so
                }
            }
        });
    }));
</script>
