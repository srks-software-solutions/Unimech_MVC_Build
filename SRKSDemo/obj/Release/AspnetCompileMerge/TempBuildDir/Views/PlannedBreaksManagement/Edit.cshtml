@model SRKSDemo.Server_Model.tblplannedbreak

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- page content -->
<div class="right_col" role="main">
    <div class="">
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Planned Breaks Management</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        @using (Html.BeginForm("Edit", "PlannedBreaksManagement", FormMethod.Post))
                        {
                            <form class="form-horizontal form-label-left" novalidate>
                                <div class="control-group" id="fields">
                                    <div class="controls">
                                        <div class="form">
                                            <div class="entry input-group col-sm-12">
                                                <div class="item form-group">
                                                    <label class="control-label col-md-1 col-sm-3 col-xs-12">From Time</label>
                                                    <div class="col-md-3 col-sm-6 col-xs-12">
                                                        @Html.TextBoxFor(model => model.StartTime, new { @class = "form-control1 Starttime", @type = "time", @required = "required", @oninput = "timecheck();" })
                                                        <span id="messageSpan" style="color:red"></span>
                                                    </div>
                                                    <label class="control-label col-md-1 col-sm-3 col-xs-12">To Time</label>
                                                    <div class="col-md-3 col-sm-6 col-xs-12">
                                                        @Html.TextBoxFor(model => model.EndTime, new { @class = "form-control1 Endtime", @type = "time", @required = "required", @oninput = "timecheck();" })
                                                    </div>
                                                    <label class="control-label col-md-1 col-sm-3 col-xs-12">Reason</label>
                                                    <div class="col-md-3 col-sm-6 col-xs-12">
                                                        @Html.TextBoxFor(model => model.BreakReason, new { @class = "form-control1 Breakdown", @required = "required" })
                                                    </div>
                                                </div>
                                                @*<span class="input-group-btn">
                                                        <button class="btn btn-round btn-success btn-add" type="button">
                                                            <span class="glyphicon glyphicon-plus"></span>
                                                        </button>
                                                    </span>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="generate-btn">
                                    @Html.HiddenFor(m => m.BreakID)
                                    <a id="" href="/PlannedBreaksManagement/Index" type="submit" class="btn btn-new"><i class="fa fa-chevron-left" aria-hidden="true"></i>&nbsp;Back</a>
                                    <button id="send" type="submit" class="btn btn-new float-right"><i class="fa fa-floppy-o" aria-hidden="true"></i>&nbsp;Update</button>
                                </div>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="../vendors/jquery/dist/jquery.min.js"></script>

<!-- /page content -->
<script>
    function timecheck() {

        var Starttime = $('.Starttime').val();
        var Endtime = $('.Endtime').val();
        $.ajax({
            type: "POST",
            data: {
                'st': Starttime, 'et': Endtime
            },
            url: "/PlannedBreaksManagement/timeRangeChecker",
            async: false,
            success: function (data) {
                if (data == "notok") {
                    //toastr.error("", "start time should be less than end time");
                    $("#send").prop('disabled', true);
                }
                else {
                    $("#send").prop('disabled', false);
                    Startandendtimeduplicatecheck();
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                //alert("", "There is some issue in network");
            }

        });
    }
</script>
<script>
    function Startandendtimeduplicatecheck() {
        var Starttime = $('.Starttime').val();
        var Endtime = $('.Endtime').val();
        $.ajax({
            type: "POST",
            data: {
                'st': Starttime, 'et': Endtime
            },
            url: "/PlannedBreaksManagement/startandendtimeduplicatecheck",
            async: false,
            success: function (data) {
                if (data == "notok") {
                    $("#messageSpan").html("Time Already Exists");
                    $("#send").prop('disabled', true);
                } else {
                    $("#send").prop('disabled', false);
                    $("#messageSpan").html('');
                    //toastr.sucess("", "Time Already Exists");
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                //alert("", "There is some issue in network");
            }
        });
    }
</script>
